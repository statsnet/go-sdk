// Package gosdk provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package gosdk

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Addresses defines model for Addresses.
type Addresses = []struct {
	Path  string  `json:"path"`
	Raw   string  `json:"raw"`
	State *string `json:"state,omitempty"`
}

// Alternatives defines model for Alternatives.
type Alternatives = []struct {
	CompanySize      *string `json:"company_size,omitempty"`
	Id               *int    `json:"id,omitempty"`
	Identifier       *string `json:"identifier,omitempty"`
	Industry         *string `json:"industry,omitempty"`
	IndustryCode     *string `json:"industry_code,omitempty"`
	Jurisdiction     *string `json:"jurisdiction,omitempty"`
	MainIndustryCode *struct {
		Code        string  `json:"code"`
		Description *string `json:"description,omitempty"`
		IsMain      bool    `json:"is_main"`
	} `json:"main_industry_code,omitempty"`
	Name           *string `json:"name,omitempty"`
	NameEn         *string `json:"name_en,omitempty"`
	SourceInactive *bool   `json:"source_inactive,omitempty"`
	Title          *string `json:"title,omitempty"`
}

// CompaniesByMainIndustryCode defines model for CompaniesByMainIndustryCode.
type CompaniesByMainIndustryCode struct {
	Company *[]struct {
		Addresses   *Addresses `json:"addresses,omitempty"`
		CompanySize *string    `json:"company_size,omitempty"`
		Headcount   *Headcount `json:"headcount,omitempty"`
		Id          *int       `json:"id,omitempty"`
		Identifier  *string    `json:"identifier,omitempty"`
		Identifiers *[]struct {
			Type  *string `json:"type,omitempty"`
			Value *string `json:"value,omitempty"`
		} `json:"identifiers,omitempty"`
		Inactive         *bool          `json:"inactive,omitempty"`
		Industry         *string        `json:"industry,omitempty"`
		IndustryCodes    *IndustryCodes `json:"industry_codes,omitempty"`
		Jurisdiction     *string        `json:"jurisdiction,omitempty"`
		MainIndustryCode *struct {
			Code        *string `json:"code,omitempty"`
			Description *string `json:"description,omitempty"`
			IsMain      *bool   `json:"is_main,omitempty"`
		} `json:"main_industry_code,omitempty"`
		Name       *string   `json:"name,omitempty"`
		NameEn     *string   `json:"name_en,omitempty"`
		NameNative *string   `json:"name_native,omitempty"`
		Officers   *Officers `json:"officers,omitempty"`
		Title      *string   `json:"title,omitempty"`
	} `json:"company,omitempty"`
	PaginationOffset *int64  `json:"pagination_offset,omitempty"`
	PaginationTotal  *uint64 `json:"pagination_total,omitempty"`
	Total            *int64  `json:"total,omitempty"`
}

// Company defines model for Company.
type Company struct {
	Addresses *Addresses `json:"addresses,omitempty"`
	Branches  *[]struct {
		Id     *int    `json:"id,omitempty"`
		Name   *string `json:"name,omitempty"`
		NameEn *string `json:"name_en,omitempty"`
	} `json:"branches,omitempty"`
	Capital *struct {
		Currency      *string  `json:"currency,omitempty"`
		PaidUpCapital *float32 `json:"paid_up_capital,omitempty"`
		ShareCapital  *float32 `json:"share_capital,omitempty"`
	} `json:"capital,omitempty"`
	CompanySize     *string     `json:"company_size,omitempty"`
	Contacts        *Contacts   `json:"contacts,omitempty"`
	CreatedAt       *time.Time  `json:"created_at,omitempty"`
	DissolutionDate *time.Time  `json:"dissolution_date,omitempty"`
	Export          *[]string   `json:"export,omitempty"`
	Financials      *Financials `json:"financials,omitempty"`
	Headcount       *Headcount  `json:"headcount,omitempty"`
	Id              *int        `json:"id,omitempty"`
	Identifier      *string     `json:"identifier,omitempty"`
	Identifiers     *[]struct {
		Type  string  `json:"type"`
		Value *string `json:"value,omitempty"`
	} `json:"identifiers,omitempty"`
	Import            *[]string      `json:"import,omitempty"`
	Inactive          *bool          `json:"inactive,omitempty"`
	IncorporationDate *time.Time     `json:"incorporation_date,omitempty"`
	Industry          *string        `json:"industry,omitempty"`
	IndustryCodes     *IndustryCodes `json:"industry_codes,omitempty"`
	Jurisdiction      *string        `json:"jurisdiction,omitempty"`
	LastUpdateDate    *time.Time     `json:"last_update_date,omitempty"`
	LegalForm         *string        `json:"legal_form,omitempty"`
	MainIndustryCode  *struct {
		Code        string  `json:"code"`
		Description *string `json:"description,omitempty"`
		IsMain      bool    `json:"is_main"`
	} `json:"main_industry_code,omitempty"`
	ManagingCompanyId   *int    `json:"managing_company_id,omitempty"`
	ManagingCompanyName *string `json:"managing_company_name,omitempty"`
	Name                *string `json:"name,omitempty"`
	NameEn              *string `json:"name_en,omitempty"`
	NameNative          *string `json:"name_native,omitempty"`
	Names               *[]struct {
		Name string `json:"name"`
	} `json:"names,omitempty"`
	Officers      *Officers     `json:"officers,omitempty"`
	OwnershipType *string       `json:"ownership_type,omitempty"`
	Risks         *Risks        `json:"risks,omitempty"`
	Shareholders  *Shareholders `json:"shareholders,omitempty"`
	Status        *string       `json:"status,omitempty"`
	Structure     *string       `json:"structure,omitempty"`
	Title         *string       `json:"title,omitempty"`
	UpdatedAt     *time.Time    `json:"updated_at,omitempty"`
	VarPayer      *bool         `json:"var_payer,omitempty"`
}

// CompanyBetaResult defines model for CompanyBetaResult.
type CompanyBetaResult struct {
	Alternatives  *Alternatives  `json:"alternatives,omitempty"`
	Company       *Company       `json:"company,omitempty"`
	Meta          *ViewMetaBeta  `json:"meta,omitempty"`
	Relations     *RelationsMeta `json:"relations,omitempty"`
	RisksMetaData *RisksMetaData `json:"risks_meta_data,omitempty"`
	Seo           *Seo           `json:"seo,omitempty"`
}

// CompanyResult defines model for CompanyResult.
type CompanyResult struct {
	Alternatives  *Alternatives   `json:"alternatives,omitempty"`
	Company       *Company        `json:"company,omitempty"`
	Contacts      *ResultContacts `json:"contacts,omitempty"`
	IsFull        bool            `json:"is_full"`
	RisksMetaData *RisksMetaData  `json:"risks_meta_data,omitempty"`
	Seo           *Seo            `json:"seo,omitempty"`
}

// CompanyWithState defines model for CompanyWithState.
type CompanyWithState struct {
	Company *[]struct {
		Addresses   *Addresses `json:"addresses,omitempty"`
		CompanySize *string    `json:"company_size,omitempty"`
		Headcount   *Headcount `json:"headcount,omitempty"`
		Id          *int       `json:"id,omitempty"`
		Identifier  *string    `json:"identifier,omitempty"`
		Identifiers *[]struct {
			Type  *string `json:"type,omitempty"`
			Value *string `json:"value,omitempty"`
		} `json:"identifiers,omitempty"`
		Inactive         *bool          `json:"inactive,omitempty"`
		Industry         *string        `json:"industry,omitempty"`
		IndustryCodes    *IndustryCodes `json:"industry_codes,omitempty"`
		Jurisdiction     *string        `json:"jurisdiction,omitempty"`
		MainIndustryCode *struct {
			Code        *string `json:"code,omitempty"`
			Description *string `json:"description,omitempty"`
			IsMain      *bool   `json:"is_main,omitempty"`
		} `json:"main_industry_code,omitempty"`
		Name       *string   `json:"name,omitempty"`
		NameEn     *string   `json:"name_en,omitempty"`
		NameNative *string   `json:"name_native,omitempty"`
		Officers   *Officers `json:"officers,omitempty"`
		Title      *string   `json:"title,omitempty"`
	} `json:"company,omitempty"`
	Count            *int `json:"count,omitempty"`
	PaginationCount  *int `json:"pagination_count,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	State            *struct {
		State *string `json:"state,omitempty"`
		Total *int    `json:"total,omitempty"`
	} `json:"state,omitempty"`
}

// Contacts defines model for Contacts.
type Contacts = []struct {
	Id    int    `json:"id"`
	Type  string `json:"type"`
	Value string `json:"value"`
}

// ContractsMeta defines model for ContractsMeta.
type ContractsMeta struct {
	CompanyId           *int `json:"company_id,omitempty"`
	GovApplicationsMeta *[]struct {
		Count *int     `json:"count,omitempty"`
		Sum   *float32 `json:"sum,omitempty"`
		Year  *int     `json:"year,omitempty"`
	} `json:"gov_applications_meta,omitempty"`
	GovContractsMeta *[]struct {
		Count  *int     `json:"count,omitempty"`
		Method *string  `json:"method,omitempty"`
		Sum    *float32 `json:"sum,omitempty"`
		Year   *int     `json:"year,omitempty"`
	} `json:"gov_contracts_meta,omitempty"`
	QuasiContractsMeta *[]struct {
		Count *int     `json:"count,omitempty"`
		Sum   *float32 `json:"sum,omitempty"`
		Year  *int     `json:"year,omitempty"`
	} `json:"quasi_contracts_meta,omitempty"`
}

// CourtCaseResult defines model for CourtCaseResult.
type CourtCaseResult struct {
	CaseTypeMeta *CourtCasesMeta `json:"case_type_meta,omitempty"`
	CourtCases   *[]struct {
		CaseNumber string    `json:"case_number"`
		CaseType   *string   `json:"case_type,omitempty"`
		Category   *string   `json:"category,omitempty"`
		Court      string    `json:"court"`
		Defendants *[]string `json:"defendants,omitempty"`
		EndDate    *string   `json:"end_date,omitempty"`
		Events     *[]struct {
			Date   *string `json:"date,omitempty"`
			Status *string `json:"status,omitempty"`
		} `json:"events,omitempty"`
		ExternalId   string    `json:"external_id"`
		Instance     *string   `json:"instance,omitempty"`
		Judge        *string   `json:"judge,omitempty"`
		Jurisdiction string    `json:"jurisdiction"`
		Plaintiffs   *[]string `json:"plaintiffs,omitempty"`
		Result       *string   `json:"result,omitempty"`
		Sides        *[]string `json:"sides,omitempty"`
		StartDate    *string   `json:"start_date,omitempty"`
	} `json:"court_cases,omitempty"`
	Meta     *CourtCasesMeta `json:"meta,omitempty"`
	Total    *int            `json:"total,omitempty"`
	YearMeta *CourtCasesMeta `json:"year_meta,omitempty"`
}

// CourtCasesMeta defines model for CourtCasesMeta.
type CourtCasesMeta = []struct {
	Total int    `json:"total"`
	Type  string `json:"type"`
}

// DataView defines model for DataView.
type DataView struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

// DataViewResult defines model for DataViewResult.
type DataViewResult struct {
	BankAccounts           *DataView `json:"bank_accounts,omitempty"`
	Certs                  *DataView `json:"certs,omitempty"`
	ConformityCerts        *DataView `json:"conformity_certs,omitempty"`
	Counterparties         *DataView `json:"counterparties,omitempty"`
	CourtCases             *DataView `json:"court_cases,omitempty"`
	Debtors                *DataView `json:"debtors,omitempty"`
	Employees              *DataView `json:"employees,omitempty"`
	Events                 *DataView `json:"events,omitempty"`
	Farmers                *DataView `json:"farmers,omitempty"`
	GovLoans               *DataView `json:"gov_loans,omitempty"`
	IntellectualProperties *DataView `json:"intellectual_properties,omitempty"`
	Jobs                   *DataView `json:"jobs,omitempty"`
	Marketplaces           *DataView `json:"marketplaces,omitempty"`
	Names                  *DataView `json:"names,omitempty"`
	Officers               *DataView `json:"officers,omitempty"`
	OfficersByCount        *DataView `json:"officers_by_count,omitempty"`
	Places                 *DataView `json:"places,omitempty"`
	PosTerminals           *DataView `json:"pos_terminals,omitempty"`
	QuasiContracts         *DataView `json:"quasi_contracts,omitempty"`
	Registries             *DataView `json:"registries,omitempty"`
	Scoring                *DataView `json:"scoring,omitempty"`
	Shareholders           *DataView `json:"shareholders,omitempty"`
	ShareholdersByCount    *DataView `json:"shareholders_by_count,omitempty"`
	Stores                 *DataView `json:"stores,omitempty"`
	Trademarks             *DataView `json:"trademarks,omitempty"`
	Websites               *DataView `json:"websites,omitempty"`
}

// EmployeesWithMeta defines model for EmployeesWithMeta.
type EmployeesWithMeta struct {
	Employees *[]struct {
		CreatedAt            *time.Time `json:"created_at,omitempty"`
		EmployerIdentifier   *string    `json:"employer_identifier,omitempty"`
		EmployerJurisdiction *string    `json:"employer_jurisdiction,omitempty"`
		EmployerName         *string    `json:"employer_name,omitempty"`
		EndDate              *time.Time `json:"end_date,omitempty"`
		Identifier           *string    `json:"identifier,omitempty"`
		Name                 *string    `json:"name,omitempty"`
		Position             *string    `json:"position,omitempty"`
		StartDate            *time.Time `json:"start_date,omitempty"`
		UpdatedAt            *time.Time `json:"updated_at,omitempty"`
	} `json:"employees,omitempty"`
	PaginationCount  *int `json:"pagination_count,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	Total            *int `json:"total,omitempty"`
	TypeTotal        *struct {
		Total *int    `json:"total,omitempty"`
		Type  *string `json:"type,omitempty"`
	} `json:"type_total,omitempty"`
}

// Error defines model for Error.
type Error struct {
	Error   int    `json:"error"`
	Message string `json:"message"`
}

// EventsWithMeta defines model for EventsWithMeta.
type EventsWithMeta struct {
	Events *[]struct {
		After        *string    `json:"after,omitempty"`
		Attr         *string    `json:"attr,omitempty"`
		Before       *string    `json:"before,omitempty"`
		Date         *time.Time `json:"date,omitempty"`
		Jurisdiction *string    `json:"jurisdiction,omitempty"`
	} `json:"events,omitempty"`
}

// ExportResult defines model for ExportResult.
type ExportResult struct {
	Export *[]struct {
		BalanceReserved *bool      `json:"balance_reserved,omitempty"`
		Chargeable      *bool      `json:"chargeable,omitempty"`
		CreatedAt       *time.Time `json:"created_at,omitempty"`
		Description     *string    `json:"description,omitempty"`
		Error           *string    `json:"error,omitempty"`
		Fields          *[]string  `json:"fields,omitempty"`
		FileName        *string    `json:"file_name,omitempty"`
		FilePath        *string    `json:"file_path,omitempty"`
		FileType        *string    `json:"file_type,omitempty"`
		Filters         *struct {
			FileType *string `json:"file_type,omitempty"`
			Filters  *struct {
				CompanySize      *[]string `json:"company_size,omitempty"`
				Inactive         *[]bool   `json:"inactive,omitempty"`
				Jurisdiction     *[]string `json:"jurisdiction,omitempty"`
				Limit            *[]string `json:"limit,omitempty"`
				MainIndustryCode *[]string `json:"main_industry_code,omitempty"`
				Query            *string   `json:"query,omitempty"`
				State            *[]string `json:"state,omitempty"`
				Structure        *[]string `json:"structure,omitempty"`
				TrueLimit        *int      `json:"true_limit,omitempty"`
			} `json:"filters,omitempty"`
			Type *string `json:"type,omitempty"`
		} `json:"filters,omitempty"`
		HashId    *string    `json:"hash_id,omitempty"`
		Id        *int       `json:"id,omitempty"`
		Language  *string    `json:"language,omitempty"`
		Status    *string    `json:"status,omitempty"`
		Type      *string    `json:"type,omitempty"`
		UpdatedAt *time.Time `json:"updated_at,omitempty"`
		Url       *string    `json:"url,omitempty"`
		UserId    *int       `json:"user_id,omitempty"`
	} `json:"export,omitempty"`
	PaginationCount  *int `json:"pagination_count,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	Total            *int `json:"total,omitempty"`
}

// FavouriteListResponse defines model for FavouriteListResponse.
type FavouriteListResponse struct {
	List *[]struct {
		CreatedAt *time.Time `json:"created_at,omitempty"`
		DeletedAt *time.Time `json:"deleted_at,omitempty"`
		Id        *int       `json:"id,omitempty"`
		Name      *string    `json:"name,omitempty"`
		OrgId     *int       `json:"org_id,omitempty"`
		UserId    *int       `json:"user_id,omitempty"`
	} `json:"list,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	PaginationTotal  *int `json:"pagination_total,omitempty"`
}

// FavouriteObjectResponse defines model for FavouriteObjectResponse.
type FavouriteObjectResponse struct {
	Items *[]struct {
		Addresses   *Addresses `json:"addresses,omitempty"`
		CompanyId   *int       `json:"company_id,omitempty"`
		CompanyName *string    `json:"company_name,omitempty"`
		CreatedAt   *time.Time `json:"created_at,omitempty"`
		DeletedAt   *time.Time `json:"deleted_at,omitempty"`
		Headcount   *Headcount `json:"headcount,omitempty"`
		Id          *int       `json:"id,omitempty"`
		Identifiers *[]struct {
			Type  string  `json:"type"`
			Value *string `json:"value,omitempty"`
		} `json:"identifiers,omitempty"`
		Industry     *string   `json:"industry,omitempty"`
		Jurisdiction *string   `json:"jurisdiction,omitempty"`
		Officers     *Officers `json:"officers,omitempty"`
	} `json:"items,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	PaginationTotal  *int `json:"pagination_total,omitempty"`
}

// Financials defines model for Financials.
type Financials = []struct {
	Accruals *[]struct {
		Kbk  *string  `json:"kbk,omitempty"`
		Paid *float32 `json:"paid,omitempty"`
		Year *int     `json:"year,omitempty"`
	} `json:"accruals,omitempty"`
	NetProfit *float32 `json:"net_profit,omitempty"`
	Revenue   *float32 `json:"revenue,omitempty"`
	Taxes     *float32 `json:"taxes,omitempty"`
	Year      *int     `json:"year,omitempty"`
}

// FizRelations defines model for FizRelations.
type FizRelations struct {
	AffiliationLinks *[]struct {
		CompanyId         *int    `json:"company_id,omitempty"`
		CompanyIdentifier *string `json:"company_identifier,omitempty"`
		CompanyKey        *int    `json:"company_key,omitempty"`
		CompanyName       *string `json:"company_name,omitempty"`
		Connection        *string `json:"connection,omitempty"`
		SourceIdentifier  *string `json:"source_identifier,omitempty"`
		SourceKey         *int    `json:"source_key,omitempty"`
		SourceName        *string `json:"source_name,omitempty"`
	} `json:"affiliation_links,omitempty"`
	Links *[]struct {
		CompanyId         *int    `json:"company_id,omitempty"`
		CompanyIdentifier *string `json:"company_identifier,omitempty"`
		CompanyKey        *int    `json:"company_key,omitempty"`
		CompanyName       *string `json:"company_name,omitempty"`
		Connection        *string `json:"connection,omitempty"`
		SourceIdentifier  *string `json:"source_identifier,omitempty"`
		SourceKey         *int    `json:"source_key,omitempty"`
		SourceName        *string `json:"source_name,omitempty"`
	} `json:"links,omitempty"`
	Meta *[]struct {
		Connection *string `json:"connection,omitempty"`
		Count      *int    `json:"count,omitempty"`
	} `json:"meta,omitempty"`
	Nodes *[]struct {
		Id         *int    `json:"id,omitempty"`
		Identifier *string `json:"identifier,omitempty"`
		Key        *string `json:"key,omitempty"`
		Name       *string `json:"name,omitempty"`
		Type       *string `json:"type,omitempty"`
	} `json:"nodes,omitempty"`
}

// GovContractsWithMeta defines model for GovContractsWithMeta.
type GovContractsWithMeta struct {
	Count              *int `json:"count,omitempty"`
	GovernmentContract *[]struct {
		ContractSumWnds    *float32 `json:"contract_sum_wnds,omitempty"`
		CustomerBankNameKz *string  `json:"customer_bank_name_kz,omitempty"`
		CustomerBankNameRu *string  `json:"customer_bank_name_ru,omitempty"`
		CustomerBik        *string  `json:"customer_bik,omitempty"`
		CustomerBin        *string  `json:"customer_bin,omitempty"`
		CustomerIik        *string  `json:"customer_iik,omitempty"`
		CustomerName       *string  `json:"customer_name,omitempty"`
		CustomerStatsnetId *string  `json:"customer_statsnet_id,omitempty"`
		DescriptionKz      *string  `json:"description_kz,omitempty"`
		DescriptionRu      *string  `json:"description_ru,omitempty"`
		EcEndDate          *string  `json:"ec_end_date,omitempty"`
		SignDate           *string  `json:"sign_date,omitempty"`
		SignReasonDocName  *string  `json:"sign_reason_doc_name,omitempty"`
		SupplierBankNameKz *string  `json:"supplier_bank_name_kz,omitempty"`
		SupplierBankNameRu *string  `json:"supplier_bank_name_ru,omitempty"`
		SupplierBiin       *string  `json:"supplier_biin,omitempty"`
		SupplierBik        *string  `json:"supplier_bik,omitempty"`
		SupplierIik        *string  `json:"supplier_iik,omitempty"`
		SupplierName       *string  `json:"supplier_name,omitempty"`
		SupplierStatsnetId *string  `json:"supplier_statsnet_id,omitempty"`
	} `json:"government_contract,omitempty"`
	PaginationCount  *int `json:"pagination_count,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
}

// Headcount defines model for Headcount.
type Headcount = []struct {
	Count *string    `json:"count,omitempty"`
	Date  *time.Time `json:"date,omitempty"`
}

// IndividualPersonWithData defines model for IndividualPersonWithData.
type IndividualPersonWithData struct {
	Contacts *[]struct {
		Value string `json:"value"`
	} `json:"contacts,omitempty"`
	Identifier   *string `json:"identifier,omitempty"`
	IsFull       *bool   `json:"is_full,omitempty"`
	Jurisdiction *string `json:"jurisdiction,omitempty"`
	Meta         *struct {
		NewOfficerCount     *int `json:"new_officer_count,omitempty"`
		NewShareholderCount *int `json:"new_shareholder_count,omitempty"`
		OldOfficerCount     *int `json:"old_officer_count,omitempty"`
		OldShareholderCount *int `json:"old_shareholder_count,omitempty"`
	} `json:"meta,omitempty"`
	Name         *string       `json:"name,omitempty"`
	NameEn       *string       `json:"name_en,omitempty"`
	Officers     *Alternatives `json:"officers,omitempty"`
	Risks        *Risks        `json:"risks,omitempty"`
	Shareholders *Alternatives `json:"shareholders,omitempty"`
}

// IndustryCodes defines model for IndustryCodes.
type IndustryCodes = []struct {
	Code        string  `json:"code"`
	Description *string `json:"description,omitempty"`
	IsMain      bool    `json:"is_main"`
}

// ListOfData defines model for ListOfData.
type ListOfData struct {
	Assets *[]struct {
		Type *string `json:"type,omitempty"`
	} `json:"assets,omitempty"`
	AssetsCount  *int `json:"assets_count,omitempty"`
	BankAccounts *[]struct {
		BankBic      *string `json:"bank_bic,omitempty"`
		BankName     *string `json:"bank_name,omitempty"`
		CreatedAt    *string `json:"created_at,omitempty"`
		DateOpen     *string `json:"date_open,omitempty"`
		Holder       *string `json:"holder,omitempty"`
		Iban         *string `json:"iban,omitempty"`
		Id           *int    `json:"id,omitempty"`
		Identifier   *string `json:"identifier,omitempty"`
		Jurisdiction *string `json:"jurisdiction,omitempty"`
		Type         *string `json:"type,omitempty"`
		UpdatedAt    *string `json:"updated_at,omitempty"`
	} `json:"bank_accounts,omitempty"`
	BankAccountsCount *int `json:"bank_accounts_count,omitempty"`
	Certs             *[]struct {
		Agency              *string   `json:"agency,omitempty"`
		ApplicantAddress    *string   `json:"applicant_address,omitempty"`
		ApplicantContacts   *[]string `json:"applicant_contacts,omitempty"`
		ApplicantDesc       *string   `json:"applicant_desc,omitempty"`
		ApplicantIdentifier *string   `json:"applicant_identifier,omitempty"`
		ApplicantOrigin     *string   `json:"applicant_origin,omitempty"`
		Comment             *string   `json:"comment,omitempty"`
		CreatedAt           *string   `json:"created_at,omitempty"`
		DocType             *string   `json:"doc_type,omitempty"`
		EndDate             *string   `json:"end_date,omitempty"`
		HsCode              *string   `json:"hs_code,omitempty"`
		Id                  *int      `json:"id,omitempty"`
		IssueDate           *string   `json:"issue_date,omitempty"`
		Jurisdiction        *string   `json:"jurisdiction,omitempty"`
		Number              *string   `json:"number,omitempty"`
		ProducerAddress     *string   `json:"producer_address,omitempty"`
		ProducerContacts    *[]string `json:"producer_contacts,omitempty"`
		ProducerDesc        *string   `json:"producer_desc,omitempty"`
		ProducerIdentifier  *string   `json:"producer_identifier,omitempty"`
		ProducerOrigin      *string   `json:"producer_origin,omitempty"`
		ProductName         *string   `json:"product_name,omitempty"`
		Source              *string   `json:"source,omitempty"`
		StartDate           *string   `json:"start_date,omitempty"`
		Status              *string   `json:"status,omitempty"`
		UpdatedAt           *string   `json:"updated_at,omitempty"`
	} `json:"certs,omitempty"`
	CertsCount *int `json:"certs_count,omitempty"`
	ConfCerts  *[]struct {
		CertIssuer         *string    `json:"cert_issuer,omitempty"`
		DeclarantName      *string    `json:"declarant_name,omitempty"`
		EndDate            *time.Time `json:"end_date,omitempty"`
		ProducerName       *string    `json:"producer_name,omitempty"`
		ProductName        *string    `json:"product_name,omitempty"`
		RegistrationNumber *string    `json:"registration_number,omitempty"`
		Source             *string    `json:"source,omitempty"`
		SourceUrl          *string    `json:"source_url,omitempty"`
		StartDate          *time.Time `json:"start_date,omitempty"`
	} `json:"conf_certs,omitempty"`
	ConfCertsCount *int `json:"conf_certs_count,omitempty"`
	Counterparties *[]struct {
		CustomerIdentifier *string `json:"customer_identifier,omitempty"`
		CustomerName       *string `json:"customer_name,omitempty"`
		Source             *string `json:"source,omitempty"`
		SupplierIdentifier *string `json:"supplier_identifier,omitempty"`
		SupplierName       *string `json:"supplier_name,omitempty"`
	} `json:"counterparties,omitempty"`
	CounterpartiesCount *int `json:"counterparties_count,omitempty"`
	Debtors             *[]struct {
		Count               *int     `json:"count,omitempty"`
		RecovererIdentifier *string  `json:"recoverer_identifier,omitempty"`
		Sum                 *float32 `json:"sum,omitempty"`
	} `json:"debtors,omitempty"`
	DebtorsCount *int `json:"debtors_count,omitempty"`
	Domains      *[]struct {
		City               *string      `json:"city,omitempty"`
		Contacts           *[]string    `json:"contacts,omitempty"`
		Country            *string      `json:"country,omitempty"`
		CurrentRegistar    *string      `json:"current_registar,omitempty"`
		DomainCreated      *string      `json:"domain_created,omitempty"`
		DomainName         *string      `json:"domain_name,omitempty"`
		DomainStatus       *string      `json:"domain_status,omitempty"`
		EmailAddress       *string      `json:"email_address,omitempty"`
		Entities           *[]string    `json:"entities,omitempty"`
		FaxNumber          *string      `json:"fax_number,omitempty"`
		LastModified       *string      `json:"last_modified,omitempty"`
		Name               *string      `json:"name,omitempty"`
		NicHandle          *string      `json:"nic_handle,omitempty"`
		OrganizationName   *string      `json:"organization_name,omitempty"`
		PhoneNumber        *string      `json:"phone_number,omitempty"`
		PostalCode         *string      `json:"postal_code,omitempty"`
		PrimaryIpAddress   *string      `json:"primary_ip_address,omitempty"`
		PrimaryServer      *string      `json:"primary_server,omitempty"`
		RegistarCreated    *string      `json:"registar_created,omitempty"`
		SecondaryIpAddress *string      `json:"secondary_ip_address,omitempty"`
		SecondaryServer    *string      `json:"secondary_server,omitempty"`
		SocialNetworks     *[]string    `json:"social_networks,omitempty"`
		State              *string      `json:"state,omitempty"`
		StreetAddress      *string      `json:"street_address,omitempty"`
		Title              *string      `json:"title,omitempty"`
		UploadId           *interface{} `json:"upload_id,omitempty"`
	} `json:"domains,omitempty"`
	DomainsCount *int `json:"domains_count,omitempty"`
	Excises      *[]struct {
		Address    *string    `json:"address,omitempty"`
		EndDate    *time.Time `json:"end_date,omitempty"`
		ExciseCode *string    `json:"excise_code,omitempty"`
		Object     *string    `json:"object,omitempty"`
		Product    *string    `json:"product,omitempty"`
		StartDate  *time.Time `json:"start_date,omitempty"`
		Status     *string    `json:"status,omitempty"`
	} `json:"excises,omitempty"`
	ExcisesCount *int `json:"excises_count,omitempty"`
	Farmers      *[]struct {
		FieldsCropSummary2023 *[]struct {
			Square     *string `json:"square,omitempty"`
			Title      *string `json:"title,omitempty"`
			КолВоСХТП  *string `json:"Кол-во СХТП,omitempty"`
			КолВоПолей *string `json:"Кол-во полей,omitempty"`
		} `json:"fields_crop_summary_2023,omitempty"`
		FieldsTypesSummary2023 *[]struct {
			Square     *string `json:"square,omitempty"`
			Title      *string `json:"title,omitempty"`
			КолВоСХТП  *string `json:"Кол-во СХТП,omitempty"`
			КолВоПолей *string `json:"Кол-во полей,omitempty"`
		} `json:"fields_types_summary_2023,omitempty"`
		Name        *string `json:"name,omitempty"`
		OfficerName *string `json:"officer_name,omitempty"`
		SourceUrl   *string `json:"source_url,omitempty"`
		State       *string `json:"state,omitempty"`
	} `json:"farmers,omitempty"`
	FarmersCount *int `json:"farmers_count,omitempty"`
	FieldsCount  *int `json:"fields_count,omitempty"`
	GovLoans     *[]struct {
		BankName        *string  `json:"bank_name,omitempty"`
		CreatedAt       *string  `json:"created_at,omitempty"`
		Desc            *string  `json:"desc,omitempty"`
		EndDate         *string  `json:"end_date,omitempty"`
		FinancingSource *string  `json:"financing_source,omitempty"`
		GuaranteeAmount *float32 `json:"guarantee_amount,omitempty"`
		Id              *int     `json:"id,omitempty"`
		Identifier      *string  `json:"identifier,omitempty"`
		LoanAmount      *float32 `json:"loan_amount,omitempty"`
		LoanRate        *string  `json:"loan_rate,omitempty"`
		Name            *string  `json:"name,omitempty"`
		Purpose         *string  `json:"purpose,omitempty"`
		StartDate       *string  `json:"start_date,omitempty"`
		UpdatedAt       *string  `json:"updated_at,omitempty"`
	} `json:"gov_loans,omitempty"`
	GovLoansCount *int `json:"gov_loans_count,omitempty"`
	Jobs          *[]struct {
		CompanyId    *int    `json:"company_id,omitempty"`
		CompanyUrl   *string `json:"company_url,omitempty"`
		Education    *string `json:"education,omitempty"`
		Experience   *string `json:"experience,omitempty"`
		Id           *int    `json:"id,omitempty"`
		Identifier   *string `json:"identifier,omitempty"`
		Industry     *string `json:"industry,omitempty"`
		Internship   *string `json:"internship,omitempty"`
		JobType      *string `json:"job_type,omitempty"`
		Salary       *string `json:"salary,omitempty"`
		StartDate    *string `json:"start_date,omitempty"`
		Title        *string `json:"title,omitempty"`
		WorkSchedule *string `json:"work_schedule,omitempty"`
		WorkTerms    *string `json:"work_terms,omitempty"`
	} `json:"jobs,omitempty"`
	JobsCount  *int `json:"jobs_count,omitempty"`
	KaspiCount *int `json:"kaspi_count,omitempty"`
	KaspiShops *[]struct {
		Cities       *string `json:"cities,omitempty"`
		Identifier   *string `json:"identifier,omitempty"`
		Jurisdiction *string `json:"jurisdiction,omitempty"`
		Phone        *string `json:"phone,omitempty"`
		Products     *int    `json:"products,omitempty"`
		Reviews      *int    `json:"reviews,omitempty"`
		ShopId       *string `json:"shop_id,omitempty"`
		ShopName     *string `json:"shop_name,omitempty"`
		Source       *string `json:"source,omitempty"`
		SourceUrl    *string `json:"source_url,omitempty"`
	} `json:"kaspi_shops,omitempty"`
	Places *[]struct {
		Address       *string      `json:"address,omitempty"`
		Area          *string      `json:"area,omitempty"`
		City          *string      `json:"city,omitempty"`
		Contacts      *[]string    `json:"contacts,omitempty"`
		District      *string      `json:"district,omitempty"`
		Foursquare    *string      `json:"foursquare,omitempty"`
		From          *string      `json:"from_,omitempty"`
		Heading       *string      `json:"heading,omitempty"`
		HomeNumber    *string      `json:"home_number,omitempty"`
		Id            *int         `json:"id,omitempty"`
		Index         *string      `json:"index,omitempty"`
		Latitude      *string      `json:"latitude,omitempty"`
		Livejournal   *string      `json:"livejournal,omitempty"`
		Longitude     *string      `json:"longitude,omitempty"`
		Name          *string      `json:"name,omitempty"`
		StreetName    *string      `json:"street_name,omitempty"`
		Subheading    *string      `json:"subheading,omitempty"`
		TimeWork      *string      `json:"time_work,omitempty"`
		WaysOfPayment *interface{} `json:"ways_of_payment,omitempty"`
	} `json:"places,omitempty"`
	PlacesCount       *int `json:"places_count,omitempty"`
	PosTerminalsCount *int `json:"pos_terminals_count,omitempty"`
	PostTerminals     *[]struct {
		Address      *string `json:"address,omitempty"`
		CreatedAt    *string `json:"created_at,omitempty"`
		EndDate      *string `json:"end_date,omitempty"`
		Id           *int    `json:"id,omitempty"`
		Identifier   *string `json:"identifier,omitempty"`
		Jurisdiction *string `json:"jurisdiction,omitempty"`
		Name         *string `json:"name,omitempty"`
		Source       *string `json:"source,omitempty"`
		StartDate    *string `json:"start_date,omitempty"`
		UpdatedAt    *string `json:"updated_at,omitempty"`
	} `json:"post_terminals,omitempty"`
	QuasiContracts *[]struct {
		AdvertId           *int     `json:"advert_id,omitempty"`
		AdvertName         *string  `json:"advert_name,omitempty"`
		Count              *float32 `json:"count,omitempty"`
		CustomerIdentifier *string  `json:"customer_identifier,omitempty"`
		CustomerName       *string  `json:"customer_name,omitempty"`
		Date               *string  `json:"date,omitempty"`
		Id                 *int     `json:"id,omitempty"`
		LotId              *int     `json:"lot_id,omitempty"`
		LotName            *string  `json:"lot_name,omitempty"`
		Price              *float32 `json:"price,omitempty"`
		Source             *string  `json:"source,omitempty"`
		SourceUrl          *string  `json:"source_url,omitempty"`
		Status             *string  `json:"status,omitempty"`
		SupplierIdentifier *string  `json:"supplier_identifier,omitempty"`
		SupplierName       *string  `json:"supplier_name,omitempty"`
	} `json:"quasi_contracts,omitempty"`
	QuasiContractsCount *int `json:"quasi_contracts_count,omitempty"`
	Registrations       *[]struct {
		BranchesExistence  *bool   `json:"branches_existence,omitempty"`
		CreationMethod     *string `json:"creation_method,omitempty"`
		Enterprise         *bool   `json:"enterprise,omitempty"`
		EnterpriseType     *bool   `json:"enterprise_type,omitempty"`
		ForeignInvert      *bool   `json:"foreign_invert,omitempty"`
		FoundersCount      *int    `json:"founders_count,omitempty"`
		International      *bool   `json:"international,omitempty"`
		Name               *string `json:"name,omitempty"`
		NonProfit          *bool   `json:"non_profit,omitempty"`
		OwnershipType      *string `json:"ownership_type,omitempty"`
		RegDepartment      *string `json:"reg_department,omitempty"`
		RegStatus          *string `json:"reg_status,omitempty"`
		ShortName          *string `json:"short_name,omitempty"`
		TypicalCharacter   *string `json:"typical_character,omitempty"`
		WithoutCitizenship *string `json:"without_citizenship,omitempty"`
	} `json:"registrations,omitempty"`
	Rights *[]struct {
		ApplicationDate    *string   `json:"application_date,omitempty"`
		CompanyId          *int      `json:"company_id,omitempty"`
		Holders            *[]string `json:"holders,omitempty"`
		Name               *string   `json:"name,omitempty"`
		ObjectDate         *string   `json:"object_date,omitempty"`
		ObjectType         *string   `json:"object_type,omitempty"`
		PersonName         *string   `json:"person_name,omitempty"`
		RegistrationDate   *string   `json:"registration_date,omitempty"`
		RegistrationNumber *string   `json:"registration_number,omitempty"`
		Status             *string   `json:"status,omitempty"`
	} `json:"rights,omitempty"`
	RightsCount *int `json:"rights_count,omitempty"`
	Scoring     *[]struct {
		BadRate      *float32 `json:"bad_rate,omitempty"`
		CreatedAt    *string  `json:"created_at,omitempty"`
		Group        *string  `json:"group,omitempty"`
		Id           *int     `json:"id,omitempty"`
		Identifier   *string  `json:"identifier,omitempty"`
		Jurisdiction *string  `json:"jurisdiction,omitempty"`
		Name         *string  `json:"name,omitempty"`
		RetrievedAt  *string  `json:"retrieved_at,omitempty"`
		Score        *float32 `json:"score,omitempty"`
		UpdatedAt    *string  `json:"updated_at,omitempty"`
	} `json:"scoring,omitempty"`
	ScoringCount *int `json:"scoring_count,omitempty"`
	States       *[]struct {
		CreatedAt        *string   `json:"created_at,omitempty"`
		EndDate          *string   `json:"end_date,omitempty"`
		RegistrationDate *string   `json:"registration_date,omitempty"`
		Roles            *[]string `json:"roles,omitempty"`
		Source           *string   `json:"source,omitempty"`
	} `json:"states,omitempty"`
	StatesCount *int `json:"states_count,omitempty"`
	Stores      *[]struct {
		Address           *string `json:"address,omitempty"`
		CompanyIdentifier *string `json:"company_identifier,omitempty"`
		CreatedAt         *string `json:"created_at,omitempty"`
		Id                *int    `json:"id,omitempty"`
		Jurisdiction      *string `json:"jurisdiction,omitempty"`
		License           *string `json:"license,omitempty"`
		Name              *string `json:"name,omitempty"`
		StoreName         *string `json:"store_name,omitempty"`
		UpdatedAt         *string `json:"updated_at,omitempty"`
	} `json:"stores,omitempty"`
	StoresCount *int `json:"stores_count,omitempty"`
	Trademarks  *[]struct {
		ApplicationDate   *string   `json:"application_date,omitempty"`
		ApplicationNumber *string   `json:"application_number,omitempty"`
		BulletinDate      *string   `json:"bulletin_date,omitempty"`
		BulletinNumber    *string   `json:"bulletin_number,omitempty"`
		Classifications   *[]string `json:"classifications,omitempty"`
		ExpDate           *string   `json:"exp_date,omitempty"`
		Holder            *string   `json:"holder,omitempty"`
		PdfUrl            *string   `json:"pdf_url,omitempty"`
		RegDate           *string   `json:"reg_date,omitempty"`
		RegNumber         *string   `json:"reg_number,omitempty"`
		SourceUrl         *string   `json:"source_url,omitempty"`
		TrademarkName     *string   `json:"trademark_name,omitempty"`
	} `json:"trademarks,omitempty"`
	TrademarksCount *int `json:"trademarks_count,omitempty"`
}

// LocationResponse defines model for LocationResponse.
type LocationResponse struct {
	Areas *[]struct {
		Name       *string `json:"name,omitempty"`
		NameEn     *string `json:"name_en,omitempty"`
		NameNative *string `json:"name_native,omitempty"`
		Path       *string `json:"path,omitempty"`
	} `json:"areas,omitempty"`
	Jurisdiction *string `json:"jurisdiction,omitempty"`
	NameEn       *string `json:"name_en,omitempty"`
	NameRu       *string `json:"name_ru,omitempty"`
}

// Officers defines model for Officers.
type Officers = []struct {
	Contacts *[]struct {
		Id    int    `json:"id"`
		Value string `json:"value"`
	} `json:"contacts,omitempty"`
	EndDate    *time.Time `json:"end_date,omitempty"`
	HashBin    string     `json:"hash_bin"`
	Identifier *string    `json:"identifier,omitempty"`
	Inactive   bool       `json:"inactive"`
	Name       string     `json:"name"`
	NameEn     string     `json:"name_en"`
	NameNative *string    `json:"name_native,omitempty"`
	Risks      *[]struct {
		Object  string                    `json:"object"`
		Records *[]map[string]interface{} `json:"records,omitempty"`
		Source  string                    `json:"source"`
		Status  string                    `json:"status"`
	} `json:"risks,omitempty"`
	Role      *string    `json:"role,omitempty"`
	StartDate *time.Time `json:"start_date,omitempty"`
}

// OrganizationInvitesResponse defines model for OrganizationInvitesResponse.
type OrganizationInvitesResponse struct {
	List *[]struct {
		CreatedAt *time.Time `json:"created_at,omitempty"`
		DeletedAt *time.Time `json:"deleted_at,omitempty"`
		OrgId     *int       `json:"org_id,omitempty"`
		Status    *string    `json:"status,omitempty"`
		UserId    *int       `json:"user_id,omitempty"`
	} `json:"list,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	PaginationTotal  *int `json:"pagination_total,omitempty"`
}

// OrganizationResponse defines model for OrganizationResponse.
type OrganizationResponse struct {
	BillingAddress *string `json:"billing_address,omitempty"`
	CreatedAt      *string `json:"created_at,omitempty"`
	DeletedAt      *string `json:"deleted_at,omitempty"`
	EndDate        *string `json:"end_date,omitempty"`
	Id             *int    `json:"id,omitempty"`
	Jurisdiction   *string `json:"jurisdiction,omitempty"`
	Name           *string `json:"name,omitempty"`
	NextBillDate   *string `json:"next_bill_date,omitempty"`
	OwnerUserEmail *string `json:"owner_user_email,omitempty"`
	OwnerUserId    *string `json:"owner_user_id,omitempty"`
	OwnerUserName  *string `json:"owner_user_name,omitempty"`
	PlanId         *string `json:"plan_id,omitempty"`
	Reports        *string `json:"reports,omitempty"`
	StartDate      *string `json:"start_date,omitempty"`
	TaxId          *string `json:"tax_id,omitempty"`
	UpdatedAt      *string `json:"updated_at,omitempty"`
}

// ParentIndustryCode defines model for ParentIndustryCode.
type ParentIndustryCode struct {
	IndustryCodes    *[]ParentIndustryCode `json:"industry_codes,omitempty"`
	Key              *string               `json:"key,omitempty"`
	MainIndustryCode *string               `json:"main_industry_code,omitempty"`
}

// PlanResponse defines model for PlanResponse.
type PlanResponse struct {
	Alternative *int    `json:"alternative,omitempty"`
	Currency    *string `json:"currency,omitempty"`
	Id          *int    `json:"id,omitempty"`
	Plan        *string `json:"plan,omitempty"`
	Price       *int    `json:"price,omitempty"`
	Reports     *int    `json:"reports,omitempty"`
}

// QuasiContracts defines model for QuasiContracts.
type QuasiContracts struct {
	AdvertId           *int64     `json:"advert_id,omitempty"`
	AdvertName         *string    `json:"advert_name,omitempty"`
	Count              *float64   `json:"count,omitempty"`
	CustomerIdentifier *string    `json:"customer_identifier,omitempty"`
	CustomerName       *string    `json:"customer_name,omitempty"`
	Date               *time.Time `json:"date,omitempty"`
	Id                 *int64     `json:"id,omitempty"`
	LotId              *int64     `json:"lot_id,omitempty"`
	LotName            *string    `json:"lot_name,omitempty"`
	Price              *float64   `json:"price,omitempty"`
	Source             *string    `json:"source,omitempty"`
	SourceUrl          *string    `json:"source_url,omitempty"`
	Status             *string    `json:"status,omitempty"`
	SupplierIdentifier *string    `json:"supplier_identifier,omitempty"`
	SupplierName       *string    `json:"supplier_name,omitempty"`
	Total              *int64     `json:"total,omitempty"`
}

// QuasiContractsWithMeta defines model for QuasiContractsWithMeta.
type QuasiContractsWithMeta struct {
	PaginationOffset *int64            `json:"pagination_offset,omitempty"`
	PaginationTotal  *uint64           `json:"pagination_total,omitempty"`
	QuasiContracts   *[]QuasiContracts `json:"quasi_contracts,omitempty"`
	Total            *int64            `json:"total,omitempty"`
}

// RelationResult defines model for RelationResult.
type RelationResult struct {
	Links *[]struct {
		ConnectionHashIdentifier *string `json:"connection_hash_identifier,omitempty"`
		ConnectionId             *int    `json:"connection_id,omitempty"`
		ConnectionKey            *int    `json:"connection_key,omitempty"`
		ConnectionName           *string `json:"connection_name,omitempty"`
		ConnectionType           *string `json:"connection_type,omitempty"`
		Id                       *int    `json:"id,omitempty"`
		IsPerson                 *bool   `json:"is_person,omitempty"`
		Name                     *string `json:"name,omitempty"`
		SourceKey                *int    `json:"source_key,omitempty"`
		Type                     *string `json:"type,omitempty"`
	} `json:"links,omitempty"`
	Meta *[]struct {
		Name *int `json:"name,omitempty"`
	} `json:"meta,omitempty"`
	Node *[]struct {
		Id       *int    `json:"id,omitempty"`
		IsPerson *bool   `json:"is_person,omitempty"`
		Key      *string `json:"key,omitempty"`
		Name     *string `json:"name,omitempty"`
		Type     *string `json:"type,omitempty"`
	} `json:"node,omitempty"`
	Total *int `json:"total,omitempty"`
}

// RelationsMeta defines model for RelationsMeta.
type RelationsMeta = []struct {
	Connection string `json:"connection"`
	Count      int    `json:"count"`
}

// ReportsHistory defines model for ReportsHistory.
type ReportsHistory struct {
	Business *[]struct {
		Addresses     *Addresses     `json:"addresses,omitempty"`
		CompanySize   *string        `json:"company_size,omitempty"`
		Headcount     *Headcount     `json:"headcount,omitempty"`
		Id            *int           `json:"id,omitempty"`
		Identifier    *string        `json:"identifier,omitempty"`
		Inactive      *bool          `json:"inactive,omitempty"`
		Industry      *string        `json:"industry,omitempty"`
		IndustryCodes *IndustryCodes `json:"industry_codes,omitempty"`
		Jurisdiction  *string        `json:"jurisdiction,omitempty"`
		Name          *string        `json:"name,omitempty"`
		NameEn        *string        `json:"name_en,omitempty"`
		NameNative    *string        `json:"name_native,omitempty"`
		Officers      *[]struct {
			EndDate    *time.Time `json:"end_date,omitempty"`
			Inactive   *bool      `json:"inactive,omitempty"`
			Name       *string    `json:"name,omitempty"`
			NameEn     *string    `json:"name_en,omitempty"`
			NameNative *string    `json:"name_native,omitempty"`
			Role       *string    `json:"role,omitempty"`
			StartDate  *time.Time `json:"start_date,omitempty"`
		} `json:"officers,omitempty"`
		OwnershipType *string    `json:"ownership_type,omitempty"`
		Status        *string    `json:"status,omitempty"`
		Structure     *string    `json:"structure,omitempty"`
		Title         *string    `json:"title,omitempty"`
		ViewDate      *time.Time `json:"view_date,omitempty"`
	} `json:"business,omitempty"`
	PaginationCount  *int `json:"pagination_count,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	Total            *int `json:"total,omitempty"`
}

// ResultContacts defines model for ResultContacts.
type ResultContacts struct {
	Email   *Contacts `json:"email,omitempty"`
	Phone   *Contacts `json:"phone,omitempty"`
	Website *Contacts `json:"website,omitempty"`
}

// Risks defines model for Risks.
type Risks = []struct {
	Object  string `json:"object"`
	Records *[]struct {
		Desc    string `json:"desc"`
		Object  string `json:"object"`
		Records *[]struct {
			K string `json:"k"`
			V string `json:"v"`
		} `json:"records,omitempty"`
	} `json:"records,omitempty"`
	Source string `json:"source"`
	Status string `json:"status"`
}

// RisksMetaData defines model for RisksMetaData.
type RisksMetaData struct {
	Company      *Risks `json:"company,omitempty"`
	Officers     *Risks `json:"officers,omitempty"`
	Shareholders *Risks `json:"shareholders,omitempty"`
}

// Search defines model for Search.
type Search struct {
	Company *[]struct {
		Addresses *[]struct {
			Raw   *string `json:"raw,omitempty"`
			State *string `json:"state,omitempty"`
		} `json:"addresses,omitempty"`
		Id          *string `json:"id,omitempty"`
		Identifiers *[]struct {
			Type  *string `json:"type,omitempty"`
			Value *string `json:"value,omitempty"`
		} `json:"identifiers,omitempty"`
		Inactive     *bool   `json:"inactive,omitempty"`
		Jurisdiction *string `json:"jurisdiction,omitempty"`
		Name         *string `json:"name,omitempty"`
		NameEn       *string `json:"name_en,omitempty"`
		Structure    *string `json:"structure,omitempty"`
		Title        *string `json:"title,omitempty"`
	} `json:"company,omitempty"`
	Count            *int  `json:"count,omitempty"`
	IsPhone          *bool `json:"is_phone,omitempty"`
	PaginationCount  *int  `json:"pagination_count,omitempty"`
	PaginationOffset *int  `json:"pagination_offset,omitempty"`
}

// Seo defines model for Seo.
type Seo struct {
	Description *string `json:"description,omitempty"`
	Keywords    *string `json:"keywords,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// Shareholders defines model for Shareholders.
type Shareholders = []struct {
	Contacts *[]struct {
		Id    int    `json:"id"`
		Value string `json:"value"`
	} `json:"contacts,omitempty"`
	EndDate    *time.Time `json:"end_date,omitempty"`
	HashBin    string     `json:"hash_bin"`
	Identifier *string    `json:"identifier,omitempty"`
	Inactive   *bool      `json:"inactive,omitempty"`
	IsPerson   bool       `json:"is_person"`
	Name       string     `json:"name"`
	NameEn     string     `json:"name_en"`
	NameNative string     `json:"name_native"`
	Risks      *[]struct {
		Object  *string `json:"object,omitempty"`
		Records *[]struct {
			Desc    string `json:"desc"`
			Object  string `json:"object"`
			Records *[]struct {
				K string `json:"k"`
				V string `json:"v"`
			} `json:"records,omitempty"`
		} `json:"records,omitempty"`
		Source *string `json:"source,omitempty"`
		Status *string `json:"status,omitempty"`
	} `json:"risks,omitempty"`
	Role                 *string    `json:"role,omitempty"`
	Share                *int       `json:"share,omitempty"`
	ShareCapital         *int       `json:"share_capital,omitempty"`
	ShareholderCompanyId int        `json:"shareholder_company_id"`
	StartDate            *time.Time `json:"start_date,omitempty"`
}

// SocialNetworks defines model for SocialNetworks.
type SocialNetworks = []struct {
	AccountName    *string   `json:"account_name,omitempty"`
	Description    *string   `json:"description,omitempty"`
	Email          *string   `json:"email,omitempty"`
	Identifier     *string   `json:"identifier,omitempty"`
	Jurisdiction   *string   `json:"jurisdiction,omitempty"`
	MatchedContact *[]string `json:"matched_contact,omitempty"`
	Name           *string   `json:"name,omitempty"`
	Url            *string   `json:"url,omitempty"`
	Website        *string   `json:"website,omitempty"`
}

// SubsidiariesCompanyWithMeta defines model for SubsidiariesCompanyWithMeta.
type SubsidiariesCompanyWithMeta struct {
	Companies *[]struct {
		Id         *int    `json:"id,omitempty"`
		Identifier *string `json:"identifier,omitempty"`
		Name       *string `json:"name,omitempty"`
		NameEn     *string `json:"name_en,omitempty"`
	} `json:"companies,omitempty"`
	PaginationCount  *int `json:"pagination_count,omitempty"`
	PaginationOffset *int `json:"pagination_offset,omitempty"`
	Total            *int `json:"total,omitempty"`
}

// TaxDeclarationsResult defines model for TaxDeclarationsResult.
type TaxDeclarationsResult struct {
	TaxDeclarations *[]struct {
		Amount  *float32 `json:"amount,omitempty"`
		Date    *string  `json:"date,omitempty"`
		DocNum  *string  `json:"doc_num,omitempty"`
		DocType *string  `json:"doc_type,omitempty"`
	} `json:"tax_declarations,omitempty"`
	TaxRegime *string `json:"tax_regime,omitempty"`
}

// TokensResponse defines model for TokensResponse.
type TokensResponse struct {
	AccessToken  *string    `json:"access_token,omitempty"`
	ExpireAt     *time.Time `json:"expire_at,omitempty"`
	RefreshToken *string    `json:"refresh_token,omitempty"`
}

// UserResponse defines model for UserResponse.
type UserResponse struct {
	ApiToken             *string    `json:"api_token,omitempty"`
	CardFirstSix         *string    `json:"card_first_six,omitempty"`
	CardLastFour         *string    `json:"card_last_four,omitempty"`
	CardType             *string    `json:"card_type,omitempty"`
	CompanyName          *string    `json:"company_name,omitempty"`
	CreatedAt            *time.Time `json:"created_at,omitempty"`
	DeletedAt            *time.Time `json:"deleted_at,omitempty"`
	Email                *string    `json:"email,omitempty"`
	EmailDeliveryAbility *bool      `json:"email_delivery_ability,omitempty"`
	EmailVerified        *bool      `json:"email_verified,omitempty"`
	EndDate              *time.Time `json:"end_date,omitempty"`
	Id                   *int64     `json:"id,omitempty"`
	Language             *string    `json:"language,omitempty"`
	Name                 *string    `json:"name,omitempty"`
	NextBillDate         *time.Time `json:"next_bill_date,omitempty"`
	Phone                *string    `json:"phone,omitempty"`
	PhoneVerified        *bool      `json:"phone_verified,omitempty"`
	PlanId               *int64     `json:"plan_id,omitempty"`
	PlanReports          *int64     `json:"plan_reports,omitempty"`
	PlanText             *string    `json:"plan_text,omitempty"`
	Position             *string    `json:"position,omitempty"`
	ReferralId           *int64     `json:"referral_id,omitempty"`
	Reports              *int64     `json:"reports,omitempty"`
	Role                 *string    `json:"role,omitempty"`
	Sessions             *[]string  `json:"sessions,omitempty"`
	StartDate            *time.Time `json:"start_date,omitempty"`
	UpdatedAt            *time.Time `json:"updated_at,omitempty"`
}

// UsersLinkedCompanies defines model for UsersLinkedCompanies.
type UsersLinkedCompanies = []struct {
	Addresses       *Addresses `json:"addresses,omitempty"`
	CompanySize     *string    `json:"company_size,omitempty"`
	Contacts        *Contacts  `json:"contacts,omitempty"`
	DeletedAt       *time.Time `json:"deleted_at,omitempty"`
	DissolutionDate *time.Time `json:"dissolution_date,omitempty"`
	Id              *int       `json:"id,omitempty"`
	Identifier      *string    `json:"identifier,omitempty"`
	Identifiers     *[]struct {
		Type  *string `json:"type,omitempty"`
		Value *string `json:"value,omitempty"`
	} `json:"identifiers,omitempty"`
	Inactive          *bool            `json:"inactive,omitempty"`
	IncorporationDate *time.Time       `json:"incorporation_date,omitempty"`
	IndustryCodes     *[]IndustryCodes `json:"industry_codes,omitempty"`
	Jurisdiction      *string          `json:"jurisdiction,omitempty"`
	LastUpdateDate    *time.Time       `json:"last_update_date,omitempty"`
	MainIndustryCode  *[]struct {
		Code        *string `json:"code,omitempty"`
		Description *string `json:"description,omitempty"`
		IsMain      *bool   `json:"is_main,omitempty"`
	} `json:"main_industry_code,omitempty"`
	Name         *string       `json:"name,omitempty"`
	NameEn       *string       `json:"name_en,omitempty"`
	NameNative   *string       `json:"name_native,omitempty"`
	Officers     *Officers     `json:"officers,omitempty"`
	Risks        *Risks        `json:"risks,omitempty"`
	Shareholders *Shareholders `json:"shareholders,omitempty"`
	Structure    *string       `json:"structure,omitempty"`
	Title        *string       `json:"title,omitempty"`
}

// View defines model for View.
type View struct {
	Activities             *int     `json:"activities,omitempty"`
	BankAccounts           *int     `json:"bank_accounts,omitempty"`
	Certs                  *int     `json:"certs,omitempty"`
	CompaniesContacts      *int     `json:"companies_contacts,omitempty"`
	Counterparties         *int     `json:"counterparties,omitempty"`
	CourtCases             *int     `json:"court_cases,omitempty"`
	Debtors                *int     `json:"debtors,omitempty"`
	DebtorsAmount          *float32 `json:"debtors_amount,omitempty"`
	Employees              *int     `json:"employees,omitempty"`
	EmploymentContracts    *int     `json:"employment_contracts,omitempty"`
	Events                 *int     `json:"events,omitempty"`
	GovContracts           *int     `json:"gov_contracts,omitempty"`
	GovLoans               *int     `json:"gov_loans,omitempty"`
	Id                     *int     `json:"id,omitempty"`
	IntellectualProperties *int     `json:"intellectual_properties,omitempty"`
	Jobs                   *int     `json:"jobs,omitempty"`
	Marketplaces           *int     `json:"marketplaces,omitempty"`
	Names                  *int     `json:"names,omitempty"`
	Officers               *int     `json:"officers,omitempty"`
	OfficersByCount        *string  `json:"officers_by_count,omitempty"`
	Places                 *int     `json:"places,omitempty"`
	PosTerminals           *int     `json:"pos_terminals,omitempty"`
	Procurement            *int     `json:"procurement,omitempty"`
	QuasiContracts         *int     `json:"quasi_contracts,omitempty"`
	Registries             *[]struct {
		EndDate         *string `json:"end_date,omitempty"`
		InclusionReason *string `json:"inclusion_reason,omitempty"`
		Jurisdiction    *string `json:"jurisdiction,omitempty"`
		Name            *string `json:"name,omitempty"`
		RegistryName    *string `json:"registry_name,omitempty"`
		Source          *string `json:"source,omitempty"`
		StartDate       *string `json:"start_date,omitempty"`
	} `json:"registries,omitempty"`
	Shareholders        *int    `json:"shareholders,omitempty"`
	ShareholdersByCount *string `json:"shareholders_by_count,omitempty"`
	SocialNetworks      *int    `json:"social_networks,omitempty"`
	Stores              *int    `json:"stores,omitempty"`
	Subsidiaries        *int    `json:"subsidiaries,omitempty"`
	Trademarks          *int    `json:"trademarks,omitempty"`
	Websites            *int    `json:"websites,omitempty"`
}

// ViewMetaBeta defines model for ViewMetaBeta.
type ViewMetaBeta struct {
	Contacts            *int `json:"contacts,omitempty"`
	EmploymentContracts *int `json:"employment_contracts,omitempty"`
	Events              *int `json:"events,omitempty"`
	Subsidiaries        *int `json:"subsidiaries,omitempty"`
}

// PostAuthGoogleJSONBody defines parameters for PostAuthGoogle.
type PostAuthGoogleJSONBody struct {
	Token *string `json:"token,omitempty"`
}

// PostAuthGoogleParams defines parameters for PostAuthGoogle.
type PostAuthGoogleParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostAuthRecoverPasswordJSONBody defines parameters for PostAuthRecoverPassword.
type PostAuthRecoverPasswordJSONBody struct {
	Email *string `json:"email,omitempty"`
}

// PostAuthRecoverPasswordParams defines parameters for PostAuthRecoverPassword.
type PostAuthRecoverPasswordParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostAuthRecoverPasswordUpdateJSONBody defines parameters for PostAuthRecoverPasswordUpdate.
type PostAuthRecoverPasswordUpdateJSONBody struct {
	Password *string `json:"password,omitempty"`
	Token    *string `json:"token,omitempty"`
}

// PostAuthRecoverPasswordUpdateParams defines parameters for PostAuthRecoverPasswordUpdate.
type PostAuthRecoverPasswordUpdateParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostAuthSignInJSONBody defines parameters for PostAuthSignIn.
type PostAuthSignInJSONBody struct {
	Email    *string `json:"email,omitempty"`
	Password *string `json:"password,omitempty"`
}

// PostAuthSignInParams defines parameters for PostAuthSignIn.
type PostAuthSignInParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostAuthSignUpJSONBody defines parameters for PostAuthSignUp.
type PostAuthSignUpJSONBody struct {
	CompanyName *string `json:"company_name,omitempty"`
	Email       *string `json:"email,omitempty"`
	Name        *string `json:"name,omitempty"`
	Password    *string `json:"password,omitempty"`
	Phone       *string `json:"phone,omitempty"`
	Position    *string `json:"position,omitempty"`
}

// PostAuthSignUpParams defines parameters for PostAuthSignUp.
type PostAuthSignUpParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostAuthVerifyEmailJSONBody defines parameters for PostAuthVerifyEmail.
type PostAuthVerifyEmailJSONBody struct {
	Token *string `json:"token,omitempty"`
}

// PostAuthVerifyEmailParams defines parameters for PostAuthVerifyEmail.
type PostAuthVerifyEmailParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostBillingCloudpaymentsCardHistoryJSONBody defines parameters for PostBillingCloudpaymentsCardHistory.
type PostBillingCloudpaymentsCardHistoryJSONBody struct {
	CardFirstSix *string `json:"card_first_six,omitempty"`
	CardLastFour *string `json:"card_last_four,omitempty"`
	CardType     *string `json:"card_type,omitempty"`
}

// PostBillingCloudpaymentsCardHistoryParams defines parameters for PostBillingCloudpaymentsCardHistory.
type PostBillingCloudpaymentsCardHistoryParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBillingCloudpaymentsHistoryParams defines parameters for GetBillingCloudpaymentsHistory.
type GetBillingCloudpaymentsHistoryParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// DeleteBillingCloudpaymentsRecurrentJSONBody defines parameters for DeleteBillingCloudpaymentsRecurrent.
type DeleteBillingCloudpaymentsRecurrentJSONBody struct {
	RecurrentIds *[]string `json:"recurrent_ids,omitempty"`
}

// DeleteBillingCloudpaymentsRecurrentParams defines parameters for DeleteBillingCloudpaymentsRecurrent.
type DeleteBillingCloudpaymentsRecurrentParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBillingOrderIdParams defines parameters for GetBillingOrderId.
type GetBillingOrderIdParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBillingPlanIdParams defines parameters for GetBillingPlanId.
type GetBillingPlanIdParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBillingPlansParams defines parameters for GetBillingPlans.
type GetBillingPlansParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBillingRefundRecurrentIdParams defines parameters for GetBillingRefundRecurrentId.
type GetBillingRefundRecurrentIdParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// DeleteBillingSubscriptionsParams defines parameters for DeleteBillingSubscriptions.
type DeleteBillingSubscriptionsParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostBusinessCourtCasesJSONBody defines parameters for PostBusinessCourtCases.
type PostBusinessCourtCasesJSONBody struct {
	// Query name to search
	Query string `json:"query"`
}

// PostBusinessCourtCasesParams defines parameters for PostBusinessCourtCases.
type PostBusinessCourtCasesParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIndividualsParams defines parameters for GetBusinessIndividuals.
type GetBusinessIndividualsParams struct {
	Identifier    *int   `form:"identifier,omitempty" json:"identifier,omitempty"`
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIndividualsRelationsParams defines parameters for GetBusinessIndividualsRelations.
type GetBusinessIndividualsRelationsParams struct {
	Identifier    *int   `form:"identifier,omitempty" json:"identifier,omitempty"`
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostBusinessIndustryCodesJSONBody defines parameters for PostBusinessIndustryCodes.
type PostBusinessIndustryCodesJSONBody struct {
	Jurisdiction     *string `json:"jurisdiction,omitempty"`
	MainIndustryCode *string `json:"main_industry_code,omitempty"`
}

// PostBusinessIndustryCodesParams defines parameters for PostBusinessIndustryCodes.
type PostBusinessIndustryCodesParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostBusinessJurisdictionStateJSONBody defines parameters for PostBusinessJurisdictionState.
type PostBusinessJurisdictionStateJSONBody struct {
	Jurisdiction *string `json:"jurisdiction,omitempty"`
	State        *string `json:"state,omitempty"`
}

// PostBusinessJurisdictionStateParams defines parameters for PostBusinessJurisdictionState.
type PostBusinessJurisdictionStateParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessLocationsStatesJurisdictionParams defines parameters for GetBusinessLocationsStatesJurisdiction.
type GetBusinessLocationsStatesJurisdictionParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessPdfJurisdictionIdParams defines parameters for GetBusinessPdfJurisdictionId.
type GetBusinessPdfJurisdictionIdParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostBusinessSearchJSONBody defines parameters for PostBusinessSearch.
type PostBusinessSearchJSONBody struct {
	AddressesState *[]string `json:"addresses.state,omitempty"`
	CompanySize    *[]string `json:"company_size,omitempty"`
	ContactType    *string   `json:"contact_type,omitempty"`
	FinTaxes       *struct {
		Max *uint64 `json:"max,omitempty"`
		Min *uint64 `json:"min,omitempty"`
	} `json:"fin_taxes,omitempty"`
	Headcount        *[]string `json:"headcount,omitempty"`
	Inactive         *[]bool   `json:"inactive,omitempty"`
	Jurisdiction     *[]string `json:"jurisdiction,omitempty"`
	LegalForm        *[]string `json:"legal_form,omitempty"`
	MainIndustryCode *[]string `json:"main_industry_code,omitempty"`
	Revenue          *struct {
		Max *uint64 `json:"max,omitempty"`
		Min *uint64 `json:"min,omitempty"`
	} `json:"revenue,omitempty"`
	Structure *[]string `json:"structure,omitempty"`
}

// PostBusinessSearchParams defines parameters for PostBusinessSearch.
type PostBusinessSearchParams struct {
	Query         *string `form:"query,omitempty" json:"query,omitempty"`
	Authorization string  `json:"Authorization"`
	XSum          string  `json:"x-sum"`
	XRequestId    string  `json:"x-request-id"`
	UserAgent     string  `json:"user-agent"`
}

// PostBusinessSearchHighlightsJSONBody defines parameters for PostBusinessSearchHighlights.
type PostBusinessSearchHighlightsJSONBody struct {
	AddressesState *[]string `json:"addresses.state,omitempty"`
	CompanySize    *[]string `json:"company_size,omitempty"`
	ContactType    *string   `json:"contact_type,omitempty"`
	FinTaxes       *struct {
		Max *uint64 `json:"max,omitempty"`
		Min *uint64 `json:"min,omitempty"`
	} `json:"fin_taxes,omitempty"`
	Headcount        *[]string `json:"headcount,omitempty"`
	Inactive         *[]bool   `json:"inactive,omitempty"`
	Jurisdiction     *[]string `json:"jurisdiction,omitempty"`
	LegalForm        *[]string `json:"legal_form,omitempty"`
	MainIndustryCode *[]string `json:"main_industry_code,omitempty"`
	Revenue          *struct {
		Max *uint64 `json:"max,omitempty"`
		Min *uint64 `json:"min,omitempty"`
	} `json:"revenue,omitempty"`
	Structure *[]string `json:"structure,omitempty"`
}

// PostBusinessSearchHighlightsParams defines parameters for PostBusinessSearchHighlights.
type PostBusinessSearchHighlightsParams struct {
	Query         *string `form:"query,omitempty" json:"query,omitempty"`
	Authorization string  `json:"Authorization"`
	XSum          string  `json:"x-sum"`
	XRequestId    string  `json:"x-request-id"`
	UserAgent     string  `json:"user-agent"`
}

// GetBusinessIdBrowserPreviewParams defines parameters for GetBusinessIdBrowserPreview.
type GetBusinessIdBrowserPreviewParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdContractsMetaParams defines parameters for GetBusinessIdContractsMeta.
type GetBusinessIdContractsMetaParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdCourtCasesParams defines parameters for GetBusinessIdCourtCases.
type GetBusinessIdCourtCasesParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdDataParams defines parameters for GetBusinessIdData.
type GetBusinessIdDataParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdDataViewMetaParams defines parameters for GetBusinessIdDataViewMeta.
type GetBusinessIdDataViewMetaParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdDepartmentParams defines parameters for GetBusinessIdDepartment.
type GetBusinessIdDepartmentParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdEmployersParams defines parameters for GetBusinessIdEmployers.
type GetBusinessIdEmployersParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdEventsParams defines parameters for GetBusinessIdEvents.
type GetBusinessIdEventsParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdGovContractsParams defines parameters for GetBusinessIdGovContracts.
type GetBusinessIdGovContractsParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdQuasiContractsParams defines parameters for GetBusinessIdQuasiContracts.
type GetBusinessIdQuasiContractsParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdRelationsParams defines parameters for GetBusinessIdRelations.
type GetBusinessIdRelationsParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdRelationsTableParams defines parameters for GetBusinessIdRelationsTable.
type GetBusinessIdRelationsTableParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdSocialNetworksParams defines parameters for GetBusinessIdSocialNetworks.
type GetBusinessIdSocialNetworksParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdSubsidiariesParams defines parameters for GetBusinessIdSubsidiaries.
type GetBusinessIdSubsidiariesParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdTaxDeclarationsParams defines parameters for GetBusinessIdTaxDeclarations.
type GetBusinessIdTaxDeclarationsParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessIdViewMetaParams defines parameters for GetBusinessIdViewMeta.
type GetBusinessIdViewMetaParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessJurisdictionIndustryCodesParams defines parameters for GetBusinessJurisdictionIndustryCodes.
type GetBusinessJurisdictionIndustryCodesParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetBusinessJurisdictionIdentifierBinParams defines parameters for GetBusinessJurisdictionIdentifierBin.
type GetBusinessJurisdictionIdentifierBinParams struct {
	Authorization string `json:"Authorization"`
}

// GetBusinessJurisdictionIdPaidParams defines parameters for GetBusinessJurisdictionIdPaid.
type GetBusinessJurisdictionIdPaidParams struct {
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
	Authorization string `json:"Authorization"`
}

// GetBusinessJurisdictionIdViewParams defines parameters for GetBusinessJurisdictionIdView.
type GetBusinessJurisdictionIdViewParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostExportCreateJSONBody defines parameters for PostExportCreate.
type PostExportCreateJSONBody struct {
	FileType *string `json:"file_type,omitempty"`
	Filters  *struct {
		CompanySize      *[]string `json:"company_size,omitempty"`
		Inactive         *[]bool   `json:"inactive,omitempty"`
		Jurisdiction     *[]string `json:"jurisdiction,omitempty"`
		Limit            *[]string `json:"limit,omitempty"`
		MainIndustryCode *[]string `json:"main_industry_code,omitempty"`
		Query            *string   `json:"query,omitempty"`
		State            *[]string `json:"state,omitempty"`
		Structure        *[]string `json:"structure,omitempty"`
	} `json:"filters,omitempty"`
	Type *string `json:"type,omitempty"`
}

// PostExportCreateParams defines parameters for PostExportCreate.
type PostExportCreateParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetExportCreateReportsParams defines parameters for GetExportCreateReports.
type GetExportCreateReportsParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetExportDownloadHashIdParams defines parameters for GetExportDownloadHashId.
type GetExportDownloadHashIdParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostExportExcelIdentifiersMultipartBody defines parameters for PostExportExcelIdentifiers.
type PostExportExcelIdentifiersMultipartBody struct {
	Upload *openapi_types.File `json:"upload,omitempty"`
}

// PostExportExcelIdentifiersParams defines parameters for PostExportExcelIdentifiers.
type PostExportExcelIdentifiersParams struct {
	// WithContacts с контактами или без дефолтно false
	WithContacts  bool   `form:"with_contacts" json:"with_contacts"`
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetExportListParams defines parameters for GetExportList.
type GetExportListParams struct {
	Authorization string `json:"authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetImageIdParams defines parameters for GetImageId.
type GetImageIdParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// GetLocationsJurisdictionJurisdictionAreaParams defines parameters for GetLocationsJurisdictionJurisdictionArea.
type GetLocationsJurisdictionJurisdictionAreaParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// GetLocationsJurisdictionsAreaParams defines parameters for GetLocationsJurisdictionsArea.
type GetLocationsJurisdictionsAreaParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// GetUserCompaniesParams defines parameters for GetUserCompanies.
type GetUserCompaniesParams struct {
	Authorization string `json:"authorization"`
}

// DeleteUserCompaniesContactJSONBody defines parameters for DeleteUserCompaniesContact.
type DeleteUserCompaniesContactJSONBody struct {
	CompanyId *int    `json:"company_id,omitempty"`
	Contact   *string `json:"contact,omitempty"`
}

// DeleteUserCompaniesContactParams defines parameters for DeleteUserCompaniesContact.
type DeleteUserCompaniesContactParams struct {
	Authorization string `json:"authorization"`
}

// DeleteUserFavouriteItemIdParams defines parameters for DeleteUserFavouriteItemId.
type DeleteUserFavouriteItemIdParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostUserFavouriteItemsJSONBody defines parameters for PostUserFavouriteItems.
type PostUserFavouriteItemsJSONBody struct {
	CompanyId *int `json:"company_id,omitempty"`
	ListId    *int `json:"list_id,omitempty"`
}

// PostUserFavouriteItemsParams defines parameters for PostUserFavouriteItems.
type PostUserFavouriteItemsParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserFavouriteItemsExistsParams defines parameters for GetUserFavouriteItemsExists.
type GetUserFavouriteItemsExistsParams struct {
	CompanyIds    string `form:"company_ids" json:"company_ids"`
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserFavouriteListParams defines parameters for GetUserFavouriteList.
type GetUserFavouriteListParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostUserFavouriteListJSONBody defines parameters for PostUserFavouriteList.
type PostUserFavouriteListJSONBody struct {
	Name  *string `json:"name,omitempty"`
	OrgId *int    `json:"org_id,omitempty"`
}

// PostUserFavouriteListParams defines parameters for PostUserFavouriteList.
type PostUserFavouriteListParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserFavouriteListItemsParams defines parameters for GetUserFavouriteListItems.
type GetUserFavouriteListItemsParams struct {
	ListIds       string `form:"list_ids" json:"list_ids"`
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserFavouriteListOrgIdParams defines parameters for GetUserFavouriteListOrgId.
type GetUserFavouriteListOrgIdParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// DeleteUserFavouriteListIdParams defines parameters for DeleteUserFavouriteListId.
type DeleteUserFavouriteListIdParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserFavouriteListIdItemsParams defines parameters for GetUserFavouriteListIdItems.
type GetUserFavouriteListIdItemsParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserLogoutParams defines parameters for GetUserLogout.
type GetUserLogoutParams struct {
	Authorization string `json:"authorization"`
}

// GetUserMeParams defines parameters for GetUserMe.
type GetUserMeParams struct {
	Authorization string `json:"authorization"`
}

// PostUserMeRefreshJSONBody defines parameters for PostUserMeRefresh.
type PostUserMeRefreshJSONBody struct {
	RefreshToken *string `json:"refresh_token,omitempty"`
}

// PostUserMeRefreshParams defines parameters for PostUserMeRefresh.
type PostUserMeRefreshParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// PostUserMeUpdateJSONBody defines parameters for PostUserMeUpdate.
type PostUserMeUpdateJSONBody struct {
	CompanyName *string `json:"company_name,omitempty"`
	Email       *string `json:"email,omitempty"`
	Name        *string `json:"name,omitempty"`
	Password    *string `json:"password,omitempty"`
	Phone       *string `json:"phone,omitempty"`
	Position    *string `json:"position,omitempty"`
}

// PostUserMeUpdateParams defines parameters for PostUserMeUpdate.
type PostUserMeUpdateParams struct {
	XSum       string `json:"x-sum"`
	XRequestId string `json:"x-request-id"`
	UserAgent  string `json:"user-agent"`
}

// GetUserOrganizationParams defines parameters for GetUserOrganization.
type GetUserOrganizationParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostUserOrganizationCreateJSONBody defines parameters for PostUserOrganizationCreate.
type PostUserOrganizationCreateJSONBody struct {
	BillingAddress *string `json:"billing_address,omitempty"`
	Jurisdiction   *string `json:"jurisdiction,omitempty"`
	Name           *string `json:"name,omitempty"`
	TaxId          *string `json:"tax_id,omitempty"`
}

// PostUserOrganizationCreateParams defines parameters for PostUserOrganizationCreate.
type PostUserOrganizationCreateParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// PostUserOrganizationInviteCreateJSONBody defines parameters for PostUserOrganizationInviteCreate.
type PostUserOrganizationInviteCreateJSONBody struct {
	Email *string `json:"email,omitempty"`
}

// PostUserOrganizationInviteCreateParams defines parameters for PostUserOrganizationInviteCreate.
type PostUserOrganizationInviteCreateParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserOrganizationInvitesParams defines parameters for GetUserOrganizationInvites.
type GetUserOrganizationInvitesParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserOrganizationIdInvitesParams defines parameters for GetUserOrganizationIdInvites.
type GetUserOrganizationIdInvitesParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserOrganizationIdUserInviteAcceptParams defines parameters for GetUserOrganizationIdUserInviteAccept.
type GetUserOrganizationIdUserInviteAcceptParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserOrganizationIdUserInviteDeleteParams defines parameters for GetUserOrganizationIdUserInviteDelete.
type GetUserOrganizationIdUserInviteDeleteParams struct {
	Authorization string `json:"Authorization"`
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
}

// GetUserPhoneSendSmsParams defines parameters for GetUserPhoneSendSms.
type GetUserPhoneSendSmsParams struct {
	Authorization string `json:"authorization"`
}

// GetUserPhoneVerifyingParams defines parameters for GetUserPhoneVerifying.
type GetUserPhoneVerifyingParams struct {
	Authorization string `json:"authorization"`
	SmsCode       string `json:"sms_code"`
	VerifyToken   string `json:"verify_token"`
}

// GetUserReportsParams defines parameters for GetUserReports.
type GetUserReportsParams struct {
	XSum          string `json:"x-sum"`
	XRequestId    string `json:"x-request-id"`
	UserAgent     string `json:"user-agent"`
	Authorization string `json:"authorization"`
}

// PostAuthGoogleJSONRequestBody defines body for PostAuthGoogle for application/json ContentType.
type PostAuthGoogleJSONRequestBody PostAuthGoogleJSONBody

// PostAuthRecoverPasswordJSONRequestBody defines body for PostAuthRecoverPassword for application/json ContentType.
type PostAuthRecoverPasswordJSONRequestBody PostAuthRecoverPasswordJSONBody

// PostAuthRecoverPasswordUpdateJSONRequestBody defines body for PostAuthRecoverPasswordUpdate for application/json ContentType.
type PostAuthRecoverPasswordUpdateJSONRequestBody PostAuthRecoverPasswordUpdateJSONBody

// PostAuthSignInJSONRequestBody defines body for PostAuthSignIn for application/json ContentType.
type PostAuthSignInJSONRequestBody PostAuthSignInJSONBody

// PostAuthSignUpJSONRequestBody defines body for PostAuthSignUp for application/json ContentType.
type PostAuthSignUpJSONRequestBody PostAuthSignUpJSONBody

// PostAuthVerifyEmailJSONRequestBody defines body for PostAuthVerifyEmail for application/json ContentType.
type PostAuthVerifyEmailJSONRequestBody PostAuthVerifyEmailJSONBody

// PostBillingCloudpaymentsCardHistoryJSONRequestBody defines body for PostBillingCloudpaymentsCardHistory for application/json ContentType.
type PostBillingCloudpaymentsCardHistoryJSONRequestBody PostBillingCloudpaymentsCardHistoryJSONBody

// DeleteBillingCloudpaymentsRecurrentJSONRequestBody defines body for DeleteBillingCloudpaymentsRecurrent for application/json ContentType.
type DeleteBillingCloudpaymentsRecurrentJSONRequestBody DeleteBillingCloudpaymentsRecurrentJSONBody

// PostBusinessCourtCasesJSONRequestBody defines body for PostBusinessCourtCases for application/json ContentType.
type PostBusinessCourtCasesJSONRequestBody PostBusinessCourtCasesJSONBody

// PostBusinessIndustryCodesJSONRequestBody defines body for PostBusinessIndustryCodes for application/json ContentType.
type PostBusinessIndustryCodesJSONRequestBody PostBusinessIndustryCodesJSONBody

// PostBusinessJurisdictionStateJSONRequestBody defines body for PostBusinessJurisdictionState for application/json ContentType.
type PostBusinessJurisdictionStateJSONRequestBody PostBusinessJurisdictionStateJSONBody

// PostBusinessSearchJSONRequestBody defines body for PostBusinessSearch for application/json ContentType.
type PostBusinessSearchJSONRequestBody PostBusinessSearchJSONBody

// PostBusinessSearchHighlightsJSONRequestBody defines body for PostBusinessSearchHighlights for application/json ContentType.
type PostBusinessSearchHighlightsJSONRequestBody PostBusinessSearchHighlightsJSONBody

// PostExportCreateJSONRequestBody defines body for PostExportCreate for application/json ContentType.
type PostExportCreateJSONRequestBody PostExportCreateJSONBody

// PostExportExcelIdentifiersMultipartRequestBody defines body for PostExportExcelIdentifiers for multipart/form-data ContentType.
type PostExportExcelIdentifiersMultipartRequestBody PostExportExcelIdentifiersMultipartBody

// DeleteUserCompaniesContactJSONRequestBody defines body for DeleteUserCompaniesContact for application/json ContentType.
type DeleteUserCompaniesContactJSONRequestBody DeleteUserCompaniesContactJSONBody

// PostUserFavouriteItemsJSONRequestBody defines body for PostUserFavouriteItems for application/json ContentType.
type PostUserFavouriteItemsJSONRequestBody PostUserFavouriteItemsJSONBody

// PostUserFavouriteListJSONRequestBody defines body for PostUserFavouriteList for application/json ContentType.
type PostUserFavouriteListJSONRequestBody PostUserFavouriteListJSONBody

// PostUserMeRefreshJSONRequestBody defines body for PostUserMeRefresh for application/json ContentType.
type PostUserMeRefreshJSONRequestBody PostUserMeRefreshJSONBody

// PostUserMeUpdateJSONRequestBody defines body for PostUserMeUpdate for application/json ContentType.
type PostUserMeUpdateJSONRequestBody PostUserMeUpdateJSONBody

// PostUserOrganizationCreateJSONRequestBody defines body for PostUserOrganizationCreate for application/json ContentType.
type PostUserOrganizationCreateJSONRequestBody PostUserOrganizationCreateJSONBody

// PostUserOrganizationInviteCreateJSONRequestBody defines body for PostUserOrganizationInviteCreate for application/json ContentType.
type PostUserOrganizationInviteCreateJSONRequestBody PostUserOrganizationInviteCreateJSONBody
